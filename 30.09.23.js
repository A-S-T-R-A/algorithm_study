/*  1. Задача : Вывести все рядки с числами до определенного включительно.

 1
 2 3
 4 5 6
 7 8 9 10

 */

/*
 Упрощенная задача для обьяснения :

 Кол-во чисел в рядке = номер рядка + 1

0 - 1
1 - 1 1
2 - 1 1 1
3 - 1 1 1 1

*/

// Задаем количество рядков
// Вывести все числа до 4 строки включительно
let numRows = 4

// Переменная для текущего числа
let currentNumber = 1

// Внешний цикл для номера строки
for (let i = 0; i < numRows; i++) {
    // Создаем пустую строку для текущей строки
    let row = ""

    // Внутренний цикл для чисел в текущей строке
    for (let j = 0; j <= i; j++) {
        // Добавляем текущее число к строке и увеличиваем его на 1
        row += currentNumber + " "
        currentNumber++
    }

    // Выводим текущую строку
    console.log(row)
}

// // 2. Задача : Найти второй максимальный элемент в массиве а.

const a = [1, 5, 7]
const n = a.length
let mx = 0
let mx2 = 0

for (let i = 0; i < n; i++) {
    if (mx <= a[i]) {
        mx2 = mx
        mx = a[i]
    } else if (mx2 < a[i]) {
        mx2 = a[i]
    }
}

// В конце итерации:
// i = 2
// mx = 7
// mx2 = 5
// a[i] = 7

// // 3. Задача :  Найти максимум в каждой строке массива.

const A = [
    [5, 7],
    [1, 1],
]
const N = A.length
const M = A[0].length
const mxs = []

for (let i = 0; i < N; i++) {
    let maxNumb = 0

    for (let j = 0; j < M; j++) {
        if (A[i][j] > maxNumb) {
            maxNumb = A[i][j] // если число в массиве больше предыдущего, оно становится максимальным.
        }
    }

    mxs.push(maxNumb)
    console.log(mxs)
}

/* 4. Задача : На основе решения 3-ей найти решение этой задачи.

Если мы сделали функцию findMaxInRows(n, m, a) : number[] {...}, то
сейчас нужно сделать findMaxInColumns()

N m a
N = 2 m = 3 a = [[1, 3, 0], [2, 2, 5]]
1 3 0       1 2 | 2
2 2 5       3 2 | 3
—----       0 5 | 5
2 3 5

Вращаем массив ???
b = [] //m массивов по n элементов


Какие элементы массива А лежат в 0-й строчке массива Б?
A[0][0] a[1][0]
В 1-й строчке Б? A[0][1] a[1][1]

*/
